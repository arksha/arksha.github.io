---
layout: post
title: Leetcode Notes
date: 2015-12-08
categories: Leetcode
comments: true
---

1.Implement Queue using Stacks － 232[ leetcode传送门](https://leetcode.com/problems/implement-queue-using-stacks/)<br/>
题目：用Stacks来实现Queue.

思路：using two stacks to let elements in stacks reverse to Queue order form. 
<img src="/images/postimg/2015-12-08-lc232-sol.png" class="fit image">

2.Merge Two Sorted Lists － 21 [leetcode传送门](https://leetcode.com/problems/merge-two-sorted-lists/)<br/>
题目：Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

思路：use two pointers. Remember to use a fake head. Pure usage of link lists. Which element is smaller, then put it into the merge list.

3.Power of Two - 231 [leetcode传送门](https://leetcode.com/problems/power-of-two/)<br/>
题目：Given an integer, write a function to determine if it is a power of two.

思路：if the integer can be divided by two till the remain equals two then it is power of two, otherwise not. REMEMBER to conisder special case: n==1. *其实还有一个tricky的办法：*use binary, if it is the power of two, then the highest number of the integer must be 1 and all the other should be 0. Thus, we could minus 1 and & with the original integer to see if the result equals to 0. e.g. 100&010==0 => true

4.Balanced Binary Tree [leetcode传送门](https://leetcode.com/problems/balanced-binary-tree/)<br/>
题目：Given a binary tree, determine if it is height-balanced.
For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

思路：easy DFS

5.Symmetric Tree [leetcode传送门](https://leetcode.com/problems/symmetric-tree/)<br/>
题目: 判断一颗树是否对称
Bonus points if you could solve it both recursively and iteratively.

思路：同样DFS，left child compare with right chiild

6.Remove Element [leetcode传送门](https://leetcode.com/problems/remove-element/)<br/>
题目：Given an array and a value, remove all instances of that value in place and return the new length.

思路：easy way to use two pointers, when element in array is different form value given, give pointer B element to pointer A, move pointer A to next. Then iterate pointer B till array's end.
